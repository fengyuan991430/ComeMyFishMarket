@model IEnumerable<ComeMyFishMarket.Models.ShoppingCart>
@using ComeMyFishMarket.Data;
@inject ComeMyFishMarketContext context;

@{
    ViewData["Title"] = "Index";
}

<h1 style="margin-bottom:25px; font-family:cursive"><i class="fa fa-shopping-cart"></i>Shopping Cart </h1>
@if (ViewBag.Message != null)
{
    <p class="text-danger">@ViewBag.Message</p>
}
<table id="Cart" class="table w-100">
    <thead>
        <tr>
            <th>
                Product
            </th>
            <th>
                Unit Price
            </th>
            <th>
                Quantity
            </th>
            <th>
                Total Price
            </th>
            <th>
                Action
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SellerId)
            </th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            BlobManager bm = new BlobManager();
            List<string> bloblist = bm.ViewBlobImage(item.ProductImage);
            string[] splitblob = bloblist[0].Split("#");
            double i = item.Price * item.Quantity;
            var sname = context.Users.FirstOrDefault(x => x.Id == item.SellerId);
            <tr>
                <td>
                    <img src="@splitblob[1]" width="70" height="60" />
                    &nbsp;&nbsp;
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    RM @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity) x
                </td>
                <td>
                    RM @i
                </td>
                <td>
                    <a class="btn btn-danger" style="width:90px" asp-action="Delete" asp-route-cartid="@item.ShoppingCartID">Delete</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SellerId) , Seller Name : @sname

                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <link href="https://cdn.datatables.net/1.10.24/css/dataTables.bootstrap4.min.css" rel="stylesheet">
    <script src="//cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.24/js/dataTables.bootstrap4.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#Cart').DataTable({
                bPaginate: false,
                bFilter: false,
                bInfo: false,
                columnDefs: [
                    { "visible": false, "targets": 5 }
                ],
                language: {
                    "emptyTable": "Your shopping chart is currently empty"
                },
                orderFixed: [[5, 'asc']],
                drawCallback: function (settings) {
                    var api = this.api();
                    var rows = api.rows({ page: 'current' }).nodes();
                    var last = null;


                    api.column(5, { page: 'current' }).data().each(function (group, i) {
                        var id = group.split(",");
                        var sid = id[0];
                        if (last !== group) {
                            $(rows).eq(i).before(
                                '<tr class="group"><td colspan="4">' + group + '</td><td><a class="btn btn-success" style="width:90px" href="/ShoppingCart/Checkout?radio=' + sid + '"> Checkout </a></td></tr>'
                            );

                            last = group;
                        }
                    });
                },
            });
        })

    </script>
    <style>
        td {
            vertical-align: middle !important;
        }
    </style>

}

